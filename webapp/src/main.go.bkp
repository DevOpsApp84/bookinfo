package main

// Libs
import (
  "database/sql"
  "fmt"
  "time"
  "os"
  "strconv"
  "log"
  "net/http"
_ "github.com/lib/pq"
)

func main() {

  // Define variables assignments
  host     := os.Args[1]
  port     := os.Args[2]
  user     := os.Args[3]
  password := os.Args[4]
  dbname   := os.Args[5]

  // Convert string port to integer
  portc, _ := strconv.Atoi(port)

  fmt.Println(host+" "+port+" "+user+" "+password+" "+dbname)

  for {
      // Let's looping since we have no service
      fmt.Println("Infinite Loop")
      time.Sleep(time.Second)

      psqlInfo := fmt.Sprintf("host=%s port=%d user=%s "+
        "password=%s dbname=%s sslmode=disable",
        host, portc, user, password, dbname)
      db, err := sql.Open("postgres", psqlInfo)
      if err != nil {
        panic(err)
      }
      defer db.Close()

      err = db.Ping()
      if err != nil {
        panic(err)
      }
      fmt.Println("Successfully connected!")
  }

  type userInformation struct {
	  id int
	  Age int
	  Email string
	  Firstname string
	  Lastname string
  }

  func main() {
	  http.HandleFunc("/store", storeIndex)
	  http.ListenAndServe(":8080", nil)
  }

  func storeIndex(w http.ResponseWriter, r *http.Request) {

	  fmt.Fprintf(w, "Cool, your connected to the browser n")

	  if r.Method != "GET" {
		  http.Error(w, http.StatusText(405), http.StatusMethodNotAllowed)
		  return
	  }

	  rows, err := db.Query("SELECT * FROM tbluserInfo")

	  if err != nil {
		  http.Error(w, http.StatusText(500), http.StatusInternalServerError)
		  return
	  }
	  defer rows.Close()

	  usrs := make([]userInformation, 0)

	  for rows.Next() {
		  usr := userInformation{}
		  err := rows.Scan(&usr.id, &usr.Age, &usr.Email, &usr.Firstname, &usr.Lastname)
		  if err != nil {
			  log.Println(err)
			  http.Error(w, http.StatusText(500), 500)
			  return
		  }
		  usrs = append(usrs, usr)
	  }

	  if err = rows.Err(); err != nil {
		  http.Error(w, http.StatusText(500), 500)
		  return
	  }

	  for _, usr := range usrs {
		  fmt.Fprintf(w, "%d %d %s %s %sn", usr.id, usr.Age, usr.Email, usr.Firstname, usr.Lastname)
	  }
  }
}
